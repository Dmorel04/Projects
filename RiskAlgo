#import necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import scipy
from scipy.stats import norm
import yfinance as yf

# Collect data on AAPL stock
data = yf.download("AAPL", start="2015-01-01", end="2021-01-01")

# Calculate daily returns
returns = data['Adj Close'].pct_change()

# Calculate volatility (standard deviation of returns)
volatility = returns.std()

# Calculate beta
covariance = returns.cov(yf.download("^GSPC", start="2015-01-01", end="2021-01-01")['Adj Close'].pct_change())
variance = yf.download("^GSPC", start="2015-01-01", end="2021-01-01")['Adj Close'].pct_change().var()
beta = covariance / variance

# Calculate value at risk (VaR) using the variance-covariance method
confidence_level = 0.95
horizon = 1 # in days
VaR = np.sqrt(horizon) * np.sqrt(variance) * (norm.ppf(1 - confidence_level))

# Evaluate risk-reward ratio
expected_return = returns.mean()
risk_reward_ratio = expected_return / VaR
print(volatility)
print("The expected percent change return of AAPL stock is: ",expected_return)
print("The value at risk of AAPL stock is:",VaR, "implying the stock has a high probability of making profit")
print("The risk-reward ratio of AAPL stock is:", risk_reward_ratio)
